<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.connexta.lab</groupId>
    <artifactId>pipeline-monitor-circleci</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>Docker Pipeline Lab Example</name>
    <description>A Springboot application with Docker and CircleCI pipeline</description>

    <developers>
        <developer>
            <name>Jonathan Fontaine</name>
            <id>j-fontaine</id>
        </developer>
    </developers>

    <properties>
        <dockerhub.userId>jrfontaine</dockerhub.userId>
        <springboot.version>2.1.7.RELEASE</springboot.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <!--START: Added to support basic Spring boot application -->
        <!-- Foundational Spring framework boot dependency -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <version>${springboot.version}</version>
            <!-- Remove the logging built into Spring boot kits which bundles slf4j -->
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--
           Bundles a number of dependent libraries for REST APIs and web applications
           - This bundles the com.fasterxml.jackson libraries which assist with JSON de-serializing
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${springboot.version}</version>
            <!-- Remove the logging built into Spring boot kits which bundles slf4j -->
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Since I wanted to take advantage of log4j2 functionality, override built-in with below -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
            <version>${springboot.version}</version>
        </dependency>
        <!--
            Bundles Spring boot test libraries
            - Contains JUnit4
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${springboot.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Bundles a number of helpful dev tools from Spring boot.  This will only stay because of lab usage -->
        <!-- DO NOT SHIP WITH THIS DEPENDENCY -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <version>${springboot.version}</version>
        </dependency>
        <!--END: Added to support basic Spring boot application -->

        <!-- added to support SonarCloud Configuration -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>27.1-jre</version>
        </dependency>

        <!--START: added this to support log4j2 functionality -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.12.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.12.1</version>
        </dependency>
        <!--END: added this to support log4j2 functionality -->
        <!--
            - Required to make Intellij happy about annotations
            - Creates a JSON file in the target/classes/META-INF/spring-configuration-metatdata.json
            - Allows IDE plugins to read and understand the annotations
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <version>${springboot.version}</version>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <!--START: Spring boot application requirements -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${springboot.version}</version>
                </plugin>
                <!--END: Spring boot application requirements -->
                <!--START: these were added to support SonarCloud scanning -->
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>3.6.0.1398</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.4</version>
                </plugin>
                <!--END: these were added to support SonarCloud scanning -->
                <!--START: This is simply required to compile the code -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.6.1</version>
                    <configuration>
                        <source>8</source>
                        <target>8</target>
                    </configuration>
                </plugin>
                <!--END: This is simply required to compile the code -->
                <!--START: This is required to build a docker image -->
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <!-- this was the latest one available on 9/11/2019 -->
                    <version>1.5.1</version>
                    <configuration>
                        <!-- The base image we are going to use -->
                        <from>
                            <!-- Original image
                                - This image was recommended on DZone HowTo
                                - Since this is a Java8 app, the base seems ok
                                - Alpine images are minimalistic int his case
                            -->
                            <image>openjdk:8u171-alpine</image>
                        </from>
                        <to>
                            <!-- Destination
                                part 1: Docker Hub space
                                part 2: Image name once created
                                part 3: Image version once created
                            -->
                            <image>${dockerhub.userId}/${project.artifactId}:${project.version}</image>
                        </to>
                        <!-- Setup some in the container properties -->
                    </configuration>

                </plugin>
                <!--END: This is required to build a docker image -->
            </plugins>
        </pluginManagement>
    </build>

    <!--Profile was configured to support SonarCloud scanning -->
    <profiles>
        <profile>
            <id>coverage</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>prepare-agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>report</id>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>