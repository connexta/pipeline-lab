#CircleCI API Version
version: 2.1
#Defines the overall Jobs for this particular pipeline to be used in workflows or as isolated jobs
jobs:    
    Build: # Execute compilation and library linkage as first step
        docker:
            - image: circleci/ruby:2.4.1
        steps:
            - checkout
            - run: echo "Build Execution"               
    Unit Testing: # Execute unit tests separate from other executions to track performance
        docker:
            - image: circleci/ruby:2.4.1
        steps:
            - checkout
            - run: echo "Running Unit Tests"
    OWASP Dependency Scan: # Security-Dependency Scanning -- Call out that we are doing OWASP specifically here or Snyk eventually but always ..Dependency Scanning
        docker:
            - image: circleci/ruby:2.4.1
        steps:
            - checkout
            - run: echo "OWASP Dependency Scanning"    
    Anchore Container Scan: # Security-Container Scanning -- Call out that we are doing Anchore specifically here or Snyk eventually but always ..Container Scanning
        docker:
            - image: circleci/ruby:2.4.1
        steps:
            - checkout
            - run: echo "Scanning Container via Anchore"
    Docker Image Build: # Build-Container Image -- Call out what flavor (likely always Docker) and indicate this is the Build of said container/image
        docker:
            - image: circleci/ruby:2.4.1
        steps:
            - checkout
            - run: echo "Building Docker Image"    
    Sonar Code Quality Scan: # Quality-Code Scanning -- Call out what flavor (Sonar presently) and indicate Code Quality Scan
        docker:
            - image: circleci/ruby:2.4.1
        steps:
            - checkout
            - run: echo "Scanning Code Quality via Sonar"    
    Contract Testing: # Testing-Contract
            docker:
            - image: circleci/ruby:2.4.1
        steps:
            - checkout
            - run: echo "Running Contract Tests"    
    Intergration Testing: # Testing-Integration
            docker:
            - image: circleci/ruby:2.4.1
        steps:
            - checkout
            - run: echo "Running Integration Tests"



#Define at least 1 workflow        
workflows:
    #Version indicates which CircleCI language version is in use
    version: 2.1
    # Defines a workflow "PR Workflow" to show up in UI
    PR Workflow:
        # List what specific defined jobs from above are to be run
        jobs:
            # Job 1 -- Build
            - Build
            # Job 2a -- Unit Tests (must finish build)
            - Unit Testing:
                # Defines ordering chain
                requires:
                    - Build
            # Job 2b -- OWASP Scan (must finish build)
            - OWASP Dependency Scan:
                # Defines ordering chain
                requires:
                    - Build
            # Job 3 -- Build Docker Image (must have completed build, unit tests, and owasp scans)
            - Docker Image Build:
                # Defines ordering chain
                requires:
                    - Build
                    - Unit Testing
                    - OWASP Dependency Scan
            # Job 4a -- Scan Docker Image created (must finish Image build first)
            - Anchore Container Scan:
                # Defines ordering chain
                requires:
                    - Docker Image Build
            # Job 4b
            - Contract Testing:
                # Defines ordering chain
                requires:
                    - Docker Image Build
            # Job 4c
            - Integration Testing:
                # Defines ordering chain
                requires:
                    - Docker Image Build
            